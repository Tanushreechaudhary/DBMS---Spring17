--Please run these SQL queries seperately, there are duplicate INSERT queries for different Use Cases and that will not work if you run everything together, because you can't insert the same info twice.
--For HR Generalist
---Create a new job
----Before
SELECT *
FROM ROLE;

----After
INSERT INTO ROLE ('ROLE_ID', 'ROLE_TITLE', 'ROLE_DESCRIPTION')
VALUES ('R8', 'ACCOUNTANT', 'To manage company or department finance related tasks');

SELECT *
FROM ROLE;

---Hire a new employee
----Before
SELECT *
FROM EMPLOYEE;

----After
INSERT INTO EMPLOYEE ('LDAP', 'FIRST_NAME', 'LAST_NAME', 'STREET', 'CITY', 'ZIP', 'STATE', 'COUNTRY', 'DATE_OF_BIRTH', 'GENDER', 'DATE_OF_JOINING', 'DATE_OF_LEAVING', 'PERSONAL_EMAIL', 'WORK_EMAIL', 'PERSONAL_PHONE', 'WORK_PHONE', 'ROLE_ID', 'BASE_SALARY', 'DEPT_ID', 'EMPLOYEE_TYPE', 'EMPLOYEE_STATUS')
VALUES ('21', 'APPLE', 'NEWTON', 'LEO DR', 'SAN JOSE', '95129', 'CALIFORNIA', 'USA', '1990-04-23', 'FEMALE', '2015-03-01', NULL, 'APPLE_N@GMAIL.COM', 'APPLE_N@CSKT.COM', ' 1-408-123-4567', '1-408-543-2365', 'R8', '$75000.00', 'D2', 'REGULAR', 'ACTIVE');

SELECT *
FROM EMPLOYEE;

---Terminate an employee
----Before
SELECT *
FROM EMPLOYEE
WHERE LDAP = '21';

----After
UPDATE EMPLOYEE
SET DATE_OF_LEAVING = '2017-06-05', EMPLOYEE_STATUS = 'TERMINATED'
WHERE LDAP = '21';

SELECT *
FROM EMPLOYEE
WHERE LDAP = '21';

---Transfer an employee
----Before
SELECT DEPT_ID
FROM EMPLOYEE
WHERE LDAP = '21';

----After
UPDATE EMPLOYEE
SET DEPT_ID = 'D3'
WHERE LDAP = '21';

SELECT DEPT_ID
FROM EMPLOYEE
WHERE LDAP = '21';

---Change Manager
----Changing Project Manager
-----Before
SELECT *
FROM PROJECT_DETAIL;

-----After
UPDATE PROJECT_DETAIL
SET PROJECT_MANAGER_ID = '5'
WHERE PROJECT_ID = 'P1';

SELECT *
FROM PROJECT_DETAIL;

----Changing Department Manager
-----Before
SELECT *
FROM DEPARTMENT;

-----After
UPDATE DEPARTMENT
SET DEPT_MANAGER_ID = '1'
WHERE DEPT_ID = 'D2';

SELECT *
FROM DEPARTMENT;

---Update talent portfolio
----New skill category for the company talent pool
-----Before
SELECT *
FROM SKILL;

-----After
INSERT INTO SKILL ('SKILL_ID', 'SKILL_NAME', 'SKILL_DESCRIPTION')
VALUES ('S10', 'COACHING', 'SKILL BASED ON ABAILITY TO TEACH AND MENTOR ON HIS OR HER TECHNICAL AREA');

SELECT *
FROM SKILL;

---View audit reports by applicaiton administer
SELECT FIRST_NAME, LAST_NAME 
FROM EMPLOYEE
WHERE ROLE_ID IN (SELECT ROLE_ID FROM ROLE WHERE ROLE_TITLE = 'HR GENERALIST');

--For Employee:
---Change Personal info
----Before
SELECT LDAP, FIRST_NAME, LAST_NAME, STREET, CITY, ZIP, STATE, COUNTRY, PERSONAL_EMAIL, PERSONAL_PHONE, BASE_SALARY
FROM EMPLOYEE
WHERE LDAP = '1';

----After
UPDATE EMPLOYEE
SET STREET = 'EL CAMINO REAL', CITY = 'SANTA CLARA', ZIP = '95054', STATE = 'CALIFORNIA', COUNTRY = 'USA', PERSONAL_EMAIL = 'BARBARA_G@HOTMAIL.COM', PERSONAL_PHONE = '1-408-874-7463', BASE_SALARY = '400000.00'
WHERE LDAP = '1';

SELECT FIRST_NAME, LAST_NAME, STREET, CITY, ZIP, STATE, COUNTRY, PERSONAL_EMAIL, PERSONAL_PHONE, BASE_SALARY
FROM EMPLOYEE
WHERE LDAP = '1';

---Update talent Portfolio
----New skill an employee obtained
-----Before
SELECT *
FROM EMP_SKILL
WHERE LDAP_ID = '1';

-----After
INSERT INTO EMP_SKILL ('LDAP_ID', 'SKILL_ID', 'SKILL_ACQUIRED_DATE')
VALUES ('1', 'S10', '2015-05-01');

SELECT *
FROM EMP_SKILL
WHERE LDAP_ID = '1';

--For Manager:
---Request salary changes for subordinates
----Before
SELECT BASE_SALARY
FROM EMPLOYEE
WHERE LDAP = '3';

----After
UPDATE EMPLOYEE
SET BASE_SALARY = '100,000.00'
WHERE LDAP = '3';

SELECT BASE_SALARY
FROM EMPLOYEE
WHERE LDAP = '3';

---Request promotion/demotion for subordinates
----Before
SELECT ROLE_ID
FROM EMPLOYEE
WHERE LDAP = '4';

----After
UPDATE EMPLOYEE
SET ROLE_ID = 'R2'
WHERE LDAP = '4';

SELECT ROLE_ID
FROM EMPLOYEE
WHERE LDAP = '4';

---Request additional job role
----Before
SELECT *
FROM ROLE;

----After
INSERT INTO ROLE ('ROLE_ID', 'ROLE_TITLE', 'ROLE_DESCRIPTION')
VALUES ('R8', 'ACCOUNTANT', 'To manage company or department finance related tasks');

SELECT *
FROM ROLE;

--For Application Administrator
---Give/change/revoke specific roles for related access
----Before
SELECT ROLE_ID
FROM EMPLOYEE
WHERE LDAP = '7';

----After
UPDATE EMPLOYEE
SET ROLE_ID = 'R2'
WHERE LDAP = '7';

SELECT ROLE_ID
FROM EMPLOYEE
WHERE LDAP = '7';

---Upon request, will create new entry for projects and departments
----Before
SELECT *
FROM DEPARTMENT;

----After
INSERT INTO DEPARTMENT (DEPT_ID, DEPT_NAME, DEPT_DESCRIPTION, LOCATION_ID, DEPT_MANAGER_ID)
VALUES ('D4', 'Engineering', 'Design prototype for new products', 'L3', 4);

SELECT *
FROM DEPARTMENT;
 
---Provide audit reports
SELECT FIRST_NAME, LAST_NAME 
FROM EMPLOYEE
WHERE ROLE_ID IN (SELECT ROLE_ID FROM ROLE WHERE ROLE_TITLE = 'HR GENERALIST');

--For HR Analyst
---Headcount
----Assumptions: Only Regular and Contingent employees except inactive employees
SELECT COUNT(LDAP) AS 'TOTAL HEADCOUNT'
FROM EMPLOYEE E
WHERE E.EMPLOYEE_STATUS <> 'INACTIVE' AND (E.EMPLOYEE_TYPE = 'REGULAR' OR E.EMPLOYEE_TYPE = 'CONTINGENT');

---Termination/Turnover
SELECT TOTAL_TERMINATIONS,TOTAL_HEADCOUNT
FROM (
(SELECT COUNT(LDAP) AS 'TOTAL_HEADCOUNT'
FROM EMPLOYEE WHERE (EMPLOYEE_STATUS <> 'INACTIVE' AND DATE_OF_LEAVING LIKE '2017-05%') OR (EMPLOYEE_TYPE = 'REGULAR' OR EMPLOYEE_TYPE = 'CONTINGENT'))),
(SELECT COUNT(LDAP) AS 'TOTAL_TERMINATIONS' FROM EMPLOYEE WHERE EMPLOYEE_STATUS = 'TERMINATED' AND DATE_OF_LEAVING LIKE '2017-05%');

---Span of Control
SELECT E.FIRST_NAME,E.LAST_NAME, COUNT(*) AS '# OF EMPLOYEES'
FROM PROJECT_ASSIGNMENT PA, PROJECT_DETAIL PD, DEPARTMENT D, EMPLOYEE E
WHERE PA.PROJECT_ID=PD.PROJECT_ID AND PD.DEPT_ID=D.DEPT_ID AND (PROJECT_MANAGER_ID = E.LDAP OR DEPT_MANAGER_ID=E.LDAP)
GROUP BY DEPT_MANAGER_ID,PROJECT_MANAGER_ID;

---Labor Cost Trend
SELECT COUNT(LDAP) AS 'TOTAL_HEADCOUNT' , SUM(BASE_SALARY) AS 'SUM_BASE_SALARY',
AVG(BASE_SALARY) AS 'AVERAGE_BASE_SALARY'
FROM EMPLOYEE E
WHERE E.EMPLOYEE_STATUS <> 'INACTIVE' AND (E.EMPLOYEE_TYPE = 'REGULAR' OR E.EMPLOYEE_TYPE = 'CONTINGENT');

---Workforce Metrics
SELECT GENDER, COUNT(LDAP) AS 'TOTAL_EMPLOYEE'
FROM EMPLOYEE E
WHERE E.EMPLOYEE_STATUS <> 'INACTIVE' AND (E.EMPLOYEE_TYPE = 'REGULAR' OR E.EMPLOYEE_TYPE = 'CONTINGENT')
GROUP BY GENDER;

---Number of hires / Promotions / Transfers / Terminations
SELECT COUNT(*) , RD.REQUEST_TITLE
FROM REQUEST RA
INNER JOIN REQUEST_TABLE RD
ON RA.REQUEST_ID=RD.REQUEST_ID
WHERE RD.REQUEST_ID ='RQ1' OR RD.REQUEST_ID ='RQ2' OR RD.REQUEST_ID ='RQ3' OR RD.REQUEST_ID ='RQ7'
GROUP BY REQUEST_TITLE;



